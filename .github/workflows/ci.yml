name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  # Validate Python code (Integration)
  validate-python:
    runs-on: ubuntu-latest
    name: Validate Python Integration
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install homeassistant>=2023.1.0
        pip install pytest pytest-asyncio pytest-homeassistant-custom-component
        pip install ruff mypy types-requests

    - name: Lint with ruff
      run: |
        ruff check custom_components/timer24h/
        ruff format --check custom_components/timer24h/

    - name: Type check with mypy
      run: |
        mypy custom_components/timer24h/ --ignore-missing-imports

    - name: Test with pytest
      run: |
        pytest tests/ -v
      continue-on-error: true  # Tests might not exist yet

  # Validate TypeScript code (Card)
  validate-typescript:
    runs-on: ubuntu-latest
    name: Validate TypeScript Card
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: www/timer-24h-card/package.json

    - name: Install dependencies
      working-directory: www/timer-24h-card
      run: npm ci

    - name: Type check
      working-directory: www/timer-24h-card
      run: npm run type-check

    - name: Lint TypeScript
      working-directory: www/timer-24h-card
      run: npm run lint
      continue-on-error: true  # ESLint config might not be complete

    - name: Build card
      working-directory: www/timer-24h-card
      run: npm run build

    - name: Check build output
      working-directory: www/timer-24h-card
      run: |
        ls -la timer-24h-card.js timer-24h-card-editor.js
        du -h timer-24h-card.js timer-24h-card-editor.js

  # Validate HACS compatibility
  validate-hacs:
    runs-on: ubuntu-latest
    name: Validate HACS Compatibility
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: HACS Integration Validation
      uses: hacs/action@main
      with:
        category: integration
        path: custom_components/timer24h

    - name: Validate manifest.json
      run: |
        python -c "
        import json
        with open('custom_components/timer24h/manifest.json') as f:
            manifest = json.load(f)
        required = ['domain', 'name', 'version', 'documentation', 'dependencies', 'codeowners', 'requirements', 'config_flow', 'iot_class']
        for field in required:
            assert field in manifest, f'Missing required field: {field}'
        print('✓ Manifest validation passed')
        "

    - name: Validate translations
      run: |
        python -c "
        import json
        import os
        lang_dir = 'custom_components/timer24h/translations'
        for lang_file in os.listdir(lang_dir):
            if lang_file.endswith('.json'):
                with open(os.path.join(lang_dir, lang_file)) as f:
                    translations = json.load(f)
                    assert 'config' in translations, f'Missing config in {lang_file}'
                    assert 'services' in translations, f'Missing services in {lang_file}'
                print(f'✓ {lang_file} validation passed')
        "

  # Security and quality checks
  security-checks:
    runs-on: ubuntu-latest
    name: Security and Quality Checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for secrets
      run: |
        if grep -r "password\|secret\|key\|token" custom_components/timer24h/ --exclude-dir=.git --exclude="*.md"; then
          echo "⚠️  Found potential secrets in code"
          exit 1
        fi
        echo "✓ No hardcoded secrets found"

    - name: Check file permissions
      run: |
        find custom_components/timer24h/ -type f -perm /111 | while read file; do
          echo "⚠️  Executable file found: $file"
        done

    - name: Validate JSON files
      run: |
        find . -name "*.json" -exec python -m json.tool {} \; > /dev/null
        echo "✓ All JSON files are valid"

    - name: Check file sizes
      run: |
        find custom_components/timer24h/ -name "*.py" -size +50k | while read file; do
          echo "⚠️  Large file: $file ($(du -h "$file" | cut -f1))"
        done

  # Integration tests (if Home Assistant test instance available)
  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: [validate-python, validate-typescript]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Home Assistant
      run: |
        pip install homeassistant>=2023.1.0
        pip install pytest-homeassistant-custom-component

    - name: Test component loading
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'custom_components')
        try:
            from timer24h import async_setup
            print('✓ Integration imports successfully')
        except Exception as e:
            print(f'✗ Import failed: {e}')
            sys.exit(1)
        "

  # Build and package release artifacts
  build-release:
    runs-on: ubuntu-latest
    name: Build Release Artifacts
    needs: [validate-python, validate-typescript, validate-hacs]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: www/timer-24h-card/package.json

    - name: Build TypeScript card
      working-directory: www/timer-24h-card
      run: |
        npm ci
        npm run build

    - name: Create release package
      run: |
        mkdir -p release-package
        
        # Copy integration files
        cp -r custom_components release-package/
        
        # Copy built card files
        mkdir -p release-package/www/timer-24h-card
        cp www/timer-24h-card/timer-24h-card.js release-package/www/timer-24h-card/
        cp www/timer-24h-card/timer-24h-card-editor.js release-package/www/timer-24h-card/
        cp www/timer-24h-card/i18n release-package/www/timer-24h-card/ -r
        cp www/timer-24h-card/README.md release-package/www/timer-24h-card/
        
        # Copy documentation
        cp README.md LICENSE release-package/

    - name: Create ZIP archive
      run: |
        cd release-package
        zip -r ../timer-24h-${GITHUB_REF#refs/tags/}.zip .
        cd ..
        
        # Create checksums
        sha256sum timer-24h-${GITHUB_REF#refs/tags/}.zip > checksums.txt

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          timer-24h-*.zip
          checksums.txt
        body: |
          ## Installation
          
          1. Download the ZIP file below
          2. Extract to your Home Assistant config directory
          3. Restart Home Assistant
          4. Add the integration via UI: Settings → Devices & Services → Add Integration → Timer 24H
          5. Add Lovelace resource: `/local/timer-24h-card/timer-24h-card.js`
          6. Add the card to your dashboard
          
          ## What's Changed
          
          See the commit history for detailed changes.
          
          ## Verification
          
          Check the SHA256 checksums in `checksums.txt` to verify file integrity.

  # Code quality metrics
  quality-metrics:
    runs-on: ubuntu-latest
    name: Code Quality Metrics
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Count lines of code
      run: |
        echo "## Code Metrics" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Files | Lines |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|-------|-------|" >> $GITHUB_STEP_SUMMARY
        
        py_files=$(find custom_components/timer24h -name "*.py" | wc -l)
        py_lines=$(find custom_components/timer24h -name "*.py" -exec wc -l {} \; | awk '{sum += $1} END {print sum}')
        echo "| Python Integration | $py_files | $py_lines |" >> $GITHUB_STEP_SUMMARY
        
        ts_files=$(find www/timer-24h-card/src -name "*.ts" | wc -l)
        ts_lines=$(find www/timer-24h-card/src -name "*.ts" -exec wc -l {} \; | awk '{sum += $1} END {print sum}')
        echo "| TypeScript Card | $ts_files | $ts_lines |" >> $GITHUB_STEP_SUMMARY
        
        json_files=$(find . -name "*.json" | wc -l)
        echo "| Configuration | $json_files | - |" >> $GITHUB_STEP_SUMMARY

    - name: Component complexity
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Component Overview" >> $GITHUB_STEP_SUMMARY
        echo "- **Integration**: Server-side scheduling with condition support" >> $GITHUB_STEP_SUMMARY
        echo "- **Card**: Visual time slot editor with real-time sync" >> $GITHUB_STEP_SUMMARY
        echo "- **I18n**: English, Spanish, French translations" >> $GITHUB_STEP_SUMMARY
        echo "- **HACS**: Full compatibility with automatic installation" >> $GITHUB_STEP_SUMMARY
