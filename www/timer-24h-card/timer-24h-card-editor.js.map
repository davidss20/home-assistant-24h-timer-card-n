{"version":3,"file":"timer-24h-card-editor.js","sources":["src/timer-24h-card-editor.ts"],"sourcesContent":["/**\r\n * Timer 24H Card Editor for Home Assistant\r\n * \r\n * Configuration editor for the Timer 24H card\r\n */\r\n\r\nimport { LitElement, html, css, CSSResultGroup, TemplateResult } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\nimport { HomeAssistant, Timer24HCardConfig, Schedule, Condition } from './timer-24h-card.js';\r\n\r\n@customElement('timer-24h-card-editor')\r\nexport class Timer24HCardEditor extends LitElement {\r\n  @property({ attribute: false }) public hass!: HomeAssistant;\r\n  @property() public config!: Timer24HCardConfig;\r\n  \r\n  @state() private schedules: { [id: string]: Schedule } = {};\r\n  @state() private selectedScheduleId?: string;\r\n  @state() private editingSchedule?: Schedule;\r\n  @state() private newScheduleId = '';\r\n  @state() private loading = false;\r\n  @state() private error?: string;\r\n  @state() private dragStart?: number;\r\n  @state() private isDragging = false;\r\n\r\n  public setConfig(config: Timer24HCardConfig): void {\r\n    this.config = config;\r\n    this.loadSchedules();\r\n  }\r\n\r\n  protected firstUpdated(): void {\r\n    this.loadSchedules();\r\n  }\r\n\r\n  private async loadSchedules(): Promise<void> {\r\n    if (!this.hass) return;\r\n\r\n    try {\r\n      this.loading = true;\r\n      this.error = undefined;\r\n\r\n      const response = await this.hass.callWS({\r\n        type: 'timer24h/list'\r\n      });\r\n\r\n      const schedulePromises = response.map(async (item: any) => {\r\n        const detail = await this.hass.callWS({\r\n          type: 'timer24h/get',\r\n          schedule_id: item.schedule_id\r\n        });\r\n        return detail;\r\n      });\r\n\r\n      const scheduleDetails = await Promise.all(schedulePromises);\r\n      \r\n      this.schedules = {};\r\n      for (const detail of scheduleDetails) {\r\n        if (detail && detail.schedule) {\r\n          this.schedules[detail.schedule.schedule_id] = detail.schedule;\r\n        }\r\n      }\r\n\r\n      // Select first schedule or default\r\n      if (!this.selectedScheduleId && Object.keys(this.schedules).length > 0) {\r\n        this.selectedScheduleId = Object.keys(this.schedules)[0];\r\n        this.editingSchedule = { ...this.schedules[this.selectedScheduleId] };\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to load schedules:', error);\r\n      this.error = 'Failed to load schedules';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  private fireConfigChanged(): void {\r\n    const event = new CustomEvent('config-changed', {\r\n      detail: { config: this.config },\r\n      bubbles: true,\r\n      composed: true,\r\n    });\r\n    this.dispatchEvent(event);\r\n  }\r\n\r\n  private updateConfig(updates: Partial<Timer24HCardConfig>): void {\r\n    this.config = { ...this.config, ...updates };\r\n    this.fireConfigChanged();\r\n  }\r\n\r\n  private async createSchedule(): Promise<void> {\r\n    if (!this.newScheduleId.trim()) {\r\n      this.error = 'Schedule ID is required';\r\n      return;\r\n    }\r\n\r\n    if (this.schedules[this.newScheduleId]) {\r\n      this.error = 'Schedule ID already exists';\r\n      return;\r\n    }\r\n\r\n    const newSchedule: Schedule = {\r\n      schedule_id: this.newScheduleId.trim(),\r\n      target_entity_id: '',\r\n      slots: new Array(48).fill(false),\r\n      enabled: true,\r\n      timezone: undefined,\r\n      conditions: []\r\n    };\r\n\r\n    this.editingSchedule = newSchedule;\r\n    this.selectedScheduleId = newSchedule.schedule_id;\r\n    this.newScheduleId = '';\r\n    this.error = undefined;\r\n  }\r\n\r\n  private async saveSchedule(): Promise<void> {\r\n    if (!this.editingSchedule) return;\r\n\r\n    if (!this.editingSchedule.target_entity_id) {\r\n      this.error = 'Target entity is required';\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.hass.callService('timer24h', 'set_schedule', {\r\n        schedule_id: this.editingSchedule.schedule_id,\r\n        target_entity_id: this.editingSchedule.target_entity_id,\r\n        slots: this.editingSchedule.slots,\r\n        enabled: this.editingSchedule.enabled,\r\n        timezone: this.editingSchedule.timezone || undefined\r\n      });\r\n\r\n      if (this.editingSchedule.conditions.length > 0) {\r\n        await this.hass.callService('timer24h', 'set_conditions', {\r\n          schedule_id: this.editingSchedule.schedule_id,\r\n          conditions: this.editingSchedule.conditions\r\n        });\r\n      }\r\n\r\n      // Update local state\r\n      this.schedules[this.editingSchedule.schedule_id] = { ...this.editingSchedule };\r\n      this.error = undefined;\r\n      \r\n      // Show success message\r\n      const event = new CustomEvent('hass-notification', {\r\n        detail: { message: 'Schedule saved successfully' },\r\n        bubbles: true,\r\n        composed: true,\r\n      });\r\n      this.dispatchEvent(event);\r\n\r\n    } catch (error) {\r\n      console.error('Failed to save schedule:', error);\r\n      this.error = 'Failed to save schedule';\r\n    }\r\n  }\r\n\r\n  private async deleteSchedule(): Promise<void> {\r\n    if (!this.selectedScheduleId) return;\r\n\r\n    if (!confirm(`Delete schedule \"${this.selectedScheduleId}\"?`)) return;\r\n\r\n    try {\r\n      await this.hass.callService('timer24h', 'remove', {\r\n        schedule_id: this.selectedScheduleId\r\n      });\r\n\r\n      delete this.schedules[this.selectedScheduleId];\r\n      this.selectedScheduleId = undefined;\r\n      this.editingSchedule = undefined;\r\n\r\n      const event = new CustomEvent('hass-notification', {\r\n        detail: { message: 'Schedule deleted successfully' },\r\n        bubbles: true,\r\n        composed: true,\r\n      });\r\n      this.dispatchEvent(event);\r\n\r\n    } catch (error) {\r\n      console.error('Failed to delete schedule:', error);\r\n      this.error = 'Failed to delete schedule';\r\n    }\r\n  }\r\n\r\n  private onScheduleSelect(e: Event): void {\r\n    const select = e.target as HTMLSelectElement;\r\n    this.selectedScheduleId = select.value;\r\n    \r\n    if (this.selectedScheduleId && this.schedules[this.selectedScheduleId]) {\r\n      this.editingSchedule = { ...this.schedules[this.selectedScheduleId] };\r\n    }\r\n  }\r\n\r\n  private toggleSlot(slotIndex: number): void {\r\n    if (!this.editingSchedule) return;\r\n\r\n    this.editingSchedule.slots[slotIndex] = !this.editingSchedule.slots[slotIndex];\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private onSlotMouseDown(slotIndex: number, e: MouseEvent): void {\r\n    this.dragStart = slotIndex;\r\n    this.isDragging = true;\r\n    e.preventDefault();\r\n  }\r\n\r\n  private onSlotMouseEnter(slotIndex: number): void {\r\n    if (!this.isDragging || this.dragStart === undefined || !this.editingSchedule) return;\r\n\r\n    const start = Math.min(this.dragStart, slotIndex);\r\n    const end = Math.max(this.dragStart, slotIndex);\r\n    const newValue = !this.editingSchedule.slots[this.dragStart];\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      this.editingSchedule.slots[i] = newValue;\r\n    }\r\n    \r\n    this.requestUpdate();\r\n  }\r\n\r\n  private onSlotMouseUp(): void {\r\n    this.isDragging = false;\r\n    this.dragStart = undefined;\r\n  }\r\n\r\n  private addCondition(): void {\r\n    if (!this.editingSchedule) return;\r\n\r\n    this.editingSchedule.conditions.push({\r\n      entity_id: '',\r\n      expected: 'on',\r\n      policy: 'skip'\r\n    });\r\n    \r\n    this.requestUpdate();\r\n  }\r\n\r\n  private removeCondition(index: number): void {\r\n    if (!this.editingSchedule) return;\r\n\r\n    this.editingSchedule.conditions.splice(index, 1);\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private updateCondition(index: number, field: keyof Condition, value: string): void {\r\n    if (!this.editingSchedule) return;\r\n\r\n    (this.editingSchedule.conditions[index] as any)[field] = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private getEntityOptions(): string[] {\r\n    if (!this.hass) return [];\r\n\r\n    return Object.keys(this.hass.states)\r\n      .filter(entityId => {\r\n        const domain = entityId.split('.')[0];\r\n        return ['light', 'switch', 'fan', 'climate', 'media_player', 'cover', 'input_boolean'].includes(domain);\r\n      })\r\n      .sort();\r\n  }\r\n\r\n  private getAllEntityOptions(): string[] {\r\n    if (!this.hass) return [];\r\n    return Object.keys(this.hass.states).sort();\r\n  }\r\n\r\n  private formatTime(slotIndex: number): string {\r\n    const hour = Math.floor(slotIndex / 2);\r\n    const minute = (slotIndex % 2) * 30;\r\n    return `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n  }\r\n\r\n  private renderCardConfig(): TemplateResult {\r\n    return html`\r\n      <div class=\"config-section\">\r\n        <h3>Card Configuration</h3>\r\n        \r\n        <div class=\"config-row\">\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            .value=${this.config.title || ''}\r\n            @input=${(e: Event) => this.updateConfig({ title: (e.target as HTMLInputElement).value })}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <label>Show Preview:</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            .checked=${this.config.show_preview !== false}\r\n            @change=${(e: Event) => this.updateConfig({ show_preview: (e.target as HTMLInputElement).checked })}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <label>Show Conditions:</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            .checked=${this.config.show_conditions !== false}\r\n            @change=${(e: Event) => this.updateConfig({ show_conditions: (e.target as HTMLInputElement).checked })}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <label>Compact Mode:</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            .checked=${this.config.compact_mode === true}\r\n            @change=${(e: Event) => this.updateConfig({ compact_mode: (e.target as HTMLInputElement).checked })}\r\n          />\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderScheduleManager(): TemplateResult {\r\n    if (this.loading) {\r\n      return html`<div class=\"loading\">Loading schedules...</div>`;\r\n    }\r\n\r\n    return html`\r\n      <div class=\"config-section\">\r\n        <h3>Schedule Management</h3>\r\n\r\n        ${this.error ? html`<div class=\"error\">${this.error}</div>` : ''}\r\n\r\n        <!-- Schedule selector -->\r\n        <div class=\"config-row\">\r\n          <label>Select Schedule:</label>\r\n          <select @change=${this.onScheduleSelect}>\r\n            <option value=\"\">-- Select Schedule --</option>\r\n            ${Object.keys(this.schedules).map(id => html`\r\n              <option value=\"${id}\" ?selected=${id === this.selectedScheduleId}>\r\n                ${id}\r\n              </option>\r\n            `)}\r\n          </select>\r\n        </div>\r\n\r\n        <!-- New schedule -->\r\n        <div class=\"config-row\">\r\n          <label>New Schedule ID:</label>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              .value=${this.newScheduleId}\r\n              @input=${(e: Event) => this.newScheduleId = (e.target as HTMLInputElement).value}\r\n              placeholder=\"schedule_id\"\r\n            />\r\n            <button @click=${this.createSchedule}>Create</button>\r\n          </div>\r\n        </div>\r\n\r\n        ${this.selectedScheduleId ? html`\r\n          <button class=\"delete-btn\" @click=${this.deleteSchedule}>\r\n            Delete Schedule\r\n          </button>\r\n        ` : ''}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderScheduleEditor(): TemplateResult {\r\n    if (!this.editingSchedule) return html``;\r\n\r\n    return html`\r\n      <div class=\"config-section\">\r\n        <h3>Schedule Settings</h3>\r\n\r\n        <div class=\"config-row\">\r\n          <label>Target Entity:</label>\r\n          <select\r\n            .value=${this.editingSchedule.target_entity_id}\r\n            @change=${(e: Event) => {\r\n              if (this.editingSchedule) {\r\n                this.editingSchedule.target_entity_id = (e.target as HTMLSelectElement).value;\r\n                this.requestUpdate();\r\n              }\r\n            }}\r\n          >\r\n            <option value=\"\">-- Select Entity --</option>\r\n            ${this.getEntityOptions().map(entityId => html`\r\n              <option value=\"${entityId}\">${entityId}</option>\r\n            `)}\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <label>Enabled:</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            .checked=${this.editingSchedule.enabled}\r\n            @change=${(e: Event) => {\r\n              if (this.editingSchedule) {\r\n                this.editingSchedule.enabled = (e.target as HTMLInputElement).checked;\r\n                this.requestUpdate();\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <label>Timezone:</label>\r\n          <input\r\n            type=\"text\"\r\n            .value=${this.editingSchedule.timezone || ''}\r\n            @input=${(e: Event) => {\r\n              if (this.editingSchedule) {\r\n                this.editingSchedule.timezone = (e.target as HTMLInputElement).value || undefined;\r\n                this.requestUpdate();\r\n              }\r\n            }}\r\n            placeholder=\"Leave empty to use HA timezone\"\r\n          />\r\n        </div>\r\n\r\n        <button class=\"save-btn\" @click=${this.saveSchedule}>\r\n          Save Schedule\r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderTimeSlotEditor(): TemplateResult {\r\n    if (!this.editingSchedule) return html``;\r\n\r\n    return html`\r\n      <div class=\"config-section\">\r\n        <h3>Time Slots</h3>\r\n        <p>Click and drag to select time slots</p>\r\n\r\n        <div class=\"slots-grid\" @mouseup=${this.onSlotMouseUp} @mouseleave=${this.onSlotMouseUp}>\r\n          ${this.editingSchedule.slots.map((isActive, index) => html`\r\n            <div\r\n              class=\"slot ${isActive ? 'active' : ''}\"\r\n              title=\"${this.formatTime(index)}\"\r\n              @mousedown=${(e: MouseEvent) => this.onSlotMouseDown(index, e)}\r\n              @mouseenter=${() => this.onSlotMouseEnter(index)}\r\n              @click=${() => this.toggleSlot(index)}\r\n            >\r\n              ${this.formatTime(index)}\r\n            </div>\r\n          `)}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderConditionsEditor(): TemplateResult {\r\n    if (!this.editingSchedule) return html``;\r\n\r\n    return html`\r\n      <div class=\"config-section\">\r\n        <h3>Conditions</h3>\r\n\r\n        <button @click=${this.addCondition}>Add Condition</button>\r\n\r\n        ${this.editingSchedule.conditions.map((condition, index) => html`\r\n          <div class=\"condition-row\">\r\n            <select\r\n              .value=${condition.entity_id}\r\n              @change=${(e: Event) => this.updateCondition(index, 'entity_id', (e.target as HTMLSelectElement).value)}\r\n            >\r\n              <option value=\"\">-- Select Entity --</option>\r\n              ${this.getAllEntityOptions().map(entityId => html`\r\n                <option value=\"${entityId}\">${entityId}</option>\r\n              `)}\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              .value=${condition.expected || ''}\r\n              @input=${(e: Event) => this.updateCondition(index, 'expected', (e.target as HTMLInputElement).value)}\r\n              placeholder=\"Expected state (e.g., on, off)\"\r\n            />\r\n\r\n            <select\r\n              .value=${condition.policy}\r\n              @change=${(e: Event) => this.updateCondition(index, 'policy', (e.target as HTMLSelectElement).value)}\r\n            >\r\n              <option value=\"skip\">Skip</option>\r\n              <option value=\"force_off\">Force Off</option>\r\n              <option value=\"defer\">Defer</option>\r\n            </select>\r\n\r\n            <button @click=${() => this.removeCondition(index)}>Remove</button>\r\n          </div>\r\n        `)}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  protected render(): TemplateResult {\r\n    return html`\r\n      <div class=\"card-config\">\r\n        ${this.renderCardConfig()}\r\n        ${this.renderScheduleManager()}\r\n        ${this.renderScheduleEditor()}\r\n        ${this.renderTimeSlotEditor()}\r\n        ${this.renderConditionsEditor()}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return css`\r\n      .card-config {\r\n        padding: 16px;\r\n      }\r\n\r\n      .config-section {\r\n        margin-bottom: 24px;\r\n        padding: 16px;\r\n        border: 1px solid var(--divider-color);\r\n        border-radius: 8px;\r\n        background: var(--card-background-color);\r\n      }\r\n\r\n      .config-section h3 {\r\n        margin: 0 0 16px 0;\r\n        color: var(--primary-text-color);\r\n      }\r\n\r\n      .config-row {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 12px;\r\n      }\r\n\r\n      .config-row label {\r\n        min-width: 120px;\r\n        color: var(--primary-text-color);\r\n      }\r\n\r\n      .config-row input,\r\n      .config-row select {\r\n        flex: 1;\r\n        padding: 8px;\r\n        border: 1px solid var(--divider-color);\r\n        border-radius: 4px;\r\n        background: var(--card-background-color);\r\n        color: var(--primary-text-color);\r\n      }\r\n\r\n      .input-group {\r\n        display: flex;\r\n        flex: 1;\r\n        gap: 8px;\r\n      }\r\n\r\n      .input-group input {\r\n        flex: 1;\r\n      }\r\n\r\n      .slots-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(8, 1fr);\r\n        gap: 2px;\r\n        margin-top: 12px;\r\n        user-select: none;\r\n      }\r\n\r\n      .slot {\r\n        padding: 8px 4px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid var(--divider-color);\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        background: var(--card-background-color);\r\n        color: var(--primary-text-color);\r\n        transition: all 0.2s;\r\n      }\r\n\r\n      .slot:hover {\r\n        background: var(--secondary-background-color);\r\n      }\r\n\r\n      .slot.active {\r\n        background: var(--primary-color);\r\n        color: var(--text-primary-color);\r\n      }\r\n\r\n      .condition-row {\r\n        display: flex;\r\n        gap: 8px;\r\n        margin-bottom: 12px;\r\n        align-items: center;\r\n      }\r\n\r\n      .condition-row select,\r\n      .condition-row input {\r\n        flex: 1;\r\n        padding: 6px;\r\n        border: 1px solid var(--divider-color);\r\n        border-radius: 4px;\r\n        background: var(--card-background-color);\r\n        color: var(--primary-text-color);\r\n      }\r\n\r\n      .save-btn {\r\n        background: var(--primary-color);\r\n        color: var(--text-primary-color);\r\n        border: none;\r\n        padding: 12px 24px;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n      }\r\n\r\n      .save-btn:hover {\r\n        opacity: 0.9;\r\n      }\r\n\r\n      .delete-btn {\r\n        background: var(--error-color);\r\n        color: white;\r\n        border: none;\r\n        padding: 8px 16px;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-size: 12px;\r\n      }\r\n\r\n      .delete-btn:hover {\r\n        opacity: 0.9;\r\n      }\r\n\r\n      button {\r\n        background: var(--secondary-background-color);\r\n        color: var(--primary-text-color);\r\n        border: 1px solid var(--divider-color);\r\n        padding: 8px 16px;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n      }\r\n\r\n      button:hover {\r\n        background: var(--primary-color);\r\n        color: var(--text-primary-color);\r\n      }\r\n\r\n      .loading {\r\n        text-align: center;\r\n        padding: 20px;\r\n        color: var(--secondary-text-color);\r\n      }\r\n\r\n      .error {\r\n        background: var(--error-color);\r\n        color: white;\r\n        padding: 8px 12px;\r\n        border-radius: 4px;\r\n        margin-bottom: 12px;\r\n        font-size: 14px;\r\n      }\r\n\r\n      @media (max-width: 600px) {\r\n        .card-config {\r\n          padding: 8px;\r\n        }\r\n\r\n        .config-row {\r\n          flex-direction: column;\r\n          align-items: stretch;\r\n        }\r\n\r\n        .config-row label {\r\n          min-width: auto;\r\n          margin-bottom: 4px;\r\n        }\r\n\r\n        .slots-grid {\r\n          grid-template-columns: repeat(6, 1fr);\r\n        }\r\n\r\n        .condition-row {\r\n          flex-direction: column;\r\n        }\r\n      }\r\n    `;\r\n  }\r\n}\r\n"],"names":["Timer24HCardEditor","LitElement","config","schedulePromises","item","scheduleDetails","detail","error","event","updates","newSchedule","select","slotIndex","e","start","end","newValue","i","index","field","value","entityId","domain","hour","minute","html","id","isActive","condition","css","__decorateClass","property","state","customElement"],"mappings":"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"}